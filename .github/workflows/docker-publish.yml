name: Release on Push to Release Branch

on:
  push:
    branches:
      - release

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full history is fetched

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}

      - name: Extract version from version.json
        id: get_version
        run: |
          # Get version from version.json, remove 'v' prefix, replace + with -
          VERSION=$(jq -r '.version' version.json | sed 's/^v//' | sed 's/+/-/g')
          # Make repository name and tag lowercase
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "repo_name=$REPO_NAME" >> $GITHUB_ENV

      - name: Determine if Pre-release
        id: prerelease_check
        run: |
          if [[ "${{ env.version }}" == *"-alpha"* || "${{ env.version }}" == *"-beta"* || "${{ env.version }}" =~ ^0\..* ]]; then
            echo "pre_release=true" >> $GITHUB_ENV
          else
            echo "pre_release=false" >> $GITHUB_ENV
          fi

      - name: Get Commit Messages for Release Notes
        id: commit_messages
        run: |
          # Find the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)
          # Get commits between the previous and current tags
          COMMITS=$(git log "$PREV_TAG"..HEAD --pretty=format:"* %s")
          echo "commits=$COMMITS" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.version }}
          release_name: ${{ env.version }}
          prerelease: ${{ env.pre_release }}
          body: |
            Automated release of version ${{ env.version }}

            ### Commits in this release:
            ${{ env.commits }}
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ghcr.io/${{ env.repo_name }}:${{ env.version }} .
          docker push ghcr.io/${{ env.repo_name }}:${{ env.version }}
