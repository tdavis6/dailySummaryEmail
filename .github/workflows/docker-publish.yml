name: Release on Push to Main Branch

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
      - dev   # Trigger on pushes to the dev branch

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full history is fetched

      # Set up specific versions of languages or tools, if needed
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Specify the required Python version

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Specify the required Node.js version

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}

      - name: Extract version from version.json
        id: get_version
        run: |
          # Ensure jq is installed if not already available
          sudo apt-get update && sudo apt-get install -y jq
          
          # Extract the original version and prepare a Docker-compatible tag
          VERSION=$(jq -r '.version' version.json)
          DOCKER_TAG=$(echo "$VERSION" | sed 's/^v//' | sed 's/+/-/g')
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "docker_tag=$DOCKER_TAG" >> $GITHUB_ENV
          echo "repo_name=$REPO_NAME" >> $GITHUB_ENV

      - name: Set release information
        id: release_info
        run: |
          # Identify if itâ€™s a pre-release
          if [[ "$VERSION" == *"-alpha"* || "$VERSION" == *"-beta"* || "$VERSION" == *"-rc"* || "$VERSION" == v0* ]]; then
            IS_PRERELEASE=true
          else
            IS_PRERELEASE=false
          fi
          echo "is_prerelease=$IS_PRERELEASE" >> $GITHUB_ENV
          echo "RELEASE_NAME=$VERSION" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          tag_name: "${{ env.version }}"
          release_name: "${{ env.RELEASE_NAME }}"
          body: |
            ## Changes in this release:
            - $(git log --pretty=format:"* %s" $(git describe --tags --abbrev=0)...HEAD)
          draft: false
          prerelease: ${{ env.is_prerelease }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.repo_name }}:${{ env.docker_tag }}
            ghcr.io/${{ env.repo_name }}:latest-dev
            ${{ env.is_prerelease == 'true' && echo "ghcr.io/${{ env.repo_name }}:latest-${{ env.docker_tag##*- }}" || echo "ghcr.io/${{ env.repo_name }}:latest" }}
